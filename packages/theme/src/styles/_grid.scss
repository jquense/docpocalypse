@use "variables" as v;
@use "mixins/breakpoints" as *;

$-columns: v.$grid-columns;
$-breakpoints: v.$grid-breakpoints;
$-gutter-width: v.$grid-gutter-width;
$-spacers: v.$spacers;

.grid {
  display: grid;
  width: 100%;
  margin-left: auto;
  margin-right: auto;
  grid-template-columns: repeat($-columns, 1fr);
}

@each $breakpoint in map-keys($-breakpoints) {
  $infix: breakpoint-infix($breakpoint, $-breakpoints);

  @include media-breakpoint-up($breakpoint, $-breakpoints) {
    @for $i from 1 through $-columns {
      .col#{$infix}-#{$i} {
        position: relative;
        grid-column-end: span $i;
      }
    }

    // `$columns - 1` because offsetting by the width of an entire row isn't possible
    @for $i from 0 through ($-columns - 1) {
      @if not($infix == '' and $i == 0) {
        // Avoid emitting useless .offset-0
        .offset#{$infix}-#{$i} {
          grid-column-start: $i;
        }
      }
    }

    @each $size, $length in $-spacers {
      .g#{$infix}-#{$size} {
        grid-gap: $length;
      }
      .gr#{$infix}-#{$size} {
        row-gap: $length;
      }
      .gc#{$infix}-#{$size} {
        column-gap: $length;
      }
    }
  }
}
