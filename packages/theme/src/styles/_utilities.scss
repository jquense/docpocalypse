@use 'variables' as v;
@use 'functions' as fn;
@use 'mixins/utilities' as *;
@use 'mixins/breakpoints' as *;

$-spacers: v.$spacers;
$-negative-spacers: fn.negative-map($-spacers);

$-spacers-auto: map-merge(
  $-spacers,
  (
    auto: auto,
  )
);

$align: (
  property: vertical-align,
  class: align,
  values: baseline top middle bottom text-bottom text-top,
) !default;

$float: (
  responsive: true,
  property: float,
  values: left right none,
) !default;

$overflow: (
  property: overflow,
  values: auto hidden,
) !default;

$display: (
  responsive: true,
  print: true,
  property: display,
  class: d,
  values: none inline inline-block block table table-row table-cell flex
    inline-flex,
) !default;

$position: (
  property: position,
  values: static relative absolute fixed sticky,
) !default;

// Sizing utilities
$width: (
  property: width,
  class: w,
  values: (
    25: 25%,
    50: 50%,
    75: 75%,
    100: 100%,
    auto: auto,
  ),
) !default;

$max-width: (
  property: max-width,
  class: mw,
  values: (
    100: 100%,
  ),
) !default;

$viewport-width: (
  property: width,
  class: vw,
  values: (
    100: 100vw,
  ),
) !default;

$min-viewport-width: (
  property: min-width,
  class: min-vw,
  values: (
    100: 100vw,
  ),
) !default;

$height: (
  property: height,
  class: h,
  values: (
    25: 25%,
    50: 50%,
    75: 75%,
    100: 100%,
    auto: auto,
  ),
) !default;

$max-height: (
  property: max-height,
  class: mh,
  values: (
    100: 100%,
  ),
) !default;

$viewport-height: (
  property: height,
  class: vh,
  values: (
    100: 100vh,
  ),
) !default;

$min-viewport-height: (
  property: min-height,
  class: min-vh,
  values: (
    100: 100vh,
  ),
) !default;

// Flex utilities
$flex: (
  responsive: true,
  property: flex,
  values: (
    fill: 1 1 auto,
  ),
) !default;

$flex-direction: (
  responsive: true,
  property: flex-direction,
  class: flex,
  values: row column row-reverse column-reverse,
) !default;

$flex-grow: (
  responsive: true,
  property: flex-grow,
  class: flex,
  values: (
    grow-0: 0,
    grow-1: 1,
  ),
) !default;

$flex-shrink: (
  responsive: true,
  property: flex-shrink,
  class: flex,
  values: (
    shrink-0: 0,
    shrink-1: 1,
  ),
) !default;

$flex-wrap: (
  responsive: true,
  property: flex-wrap,
  class: flex,
  values: wrap nowrap wrap-reverse,
) !default;

$justify-content: (
  responsive: true,
  property: justify-content,
  values: (
    start: flex-start,
    end: flex-end,
    center: center,
    between: space-between,
    around: space-around,
  ),
) !default;

$align-items: (
  responsive: true,
  property: align-items,
  values: (
    start: flex-start,
    end: flex-end,
    center: center,
    baseline: baseline,
    stretch: stretch,
  ),
) !default;

$align-content: (
  responsive: true,
  property: align-content,
  values: (
    start: flex-start,
    end: flex-end,
    center: center,
    between: space-between,
    around: space-around,
    stretch: stretch,
  ),
) !default;

$align-self: (
  responsive: true,
  property: align-self,
  values: (
    auto: auto,
    start: flex-start,
    end: flex-end,
    center: center,
    baseline: baseline,
    stretch: stretch,
  ),
) !default;

$order: (
  responsive: true,
  property: order,
  values: (
    first: -1,
    0: 0,
    1: 1,
    2: 2,
    3: 3,
    4: 4,
    5: 5,
    last: 6,
  ),
) !default;

// Margin utilities
$margin: (
  responsive: true,
  property: margin,
  class: m,
  values: $-spacers-auto,
) !default;

$margin-x: (
  responsive: true,
  property: margin-right margin-left,
  class: mx,
  values: $-spacers-auto,
) !default;

$margin-y: (
  responsive: true,
  property: margin-top margin-bottom,
  class: my,
  values: $-spacers-auto,
) !default;

$margin-top: (
  responsive: true,
  property: margin-top,
  class: mt,
  values: $-spacers-auto,
) !default;

$margin-right: (
  responsive: true,
  property: margin-right,
  class: mr,
  values: $-spacers-auto,
) !default;

$margin-bottom: (
  responsive: true,
  property: margin-bottom,
  class: mb,
  values: $-spacers-auto,
) !default;

$margin-left: (
  responsive: true,
  property: margin-left,
  class: ml,
  values: $-spacers-auto,
) !default;

// Negative margin utilities
$negative-margin: (
  responsive: true,
  property: margin,
  class: m,
  values: $-negative-spacers,
) !default;

$negative-margin-x: (
  responsive: true,
  property: margin-right margin-left,
  class: mx,
  values: $-negative-spacers,
) !default;

$negative-margin-y: (
  responsive: true,
  property: margin-top margin-bottom,
  class: my,
  values: $-negative-spacers,
) !default;

$negative-margin-top: (
  responsive: true,
  property: margin-top,
  class: mt,
  values: $-negative-spacers,
) !default;

$negative-margin-right: (
  responsive: true,
  property: margin-right,
  class: mr,
  values: $-negative-spacers,
) !default;

$negative-margin-bottom: (
  responsive: true,
  property: margin-bottom,
  class: mb,
  values: $-negative-spacers,
) !default;

$negative-margin-left: (
  responsive: true,
  property: margin-left,
  class: ml,
  values: $-negative-spacers,
) !default;

// Padding utilities
$padding: (
  responsive: true,
  property: padding,
  class: p,
  values: $-spacers,
) !default;

$padding-x: (
  responsive: true,
  property: padding-right padding-left,
  class: px,
  values: $-spacers,
) !default;

$padding-y: (
  responsive: true,
  property: padding-top padding-bottom,
  class: py,
  values: $-spacers,
) !default;

$padding-top: (
  responsive: true,
  property: padding-top,
  class: pt,
  values: $-spacers,
) !default;

$padding-right: (
  responsive: true,
  property: padding-right,
  class: pr,
  values: $-spacers,
) !default;

$padding-bottom: (
  responsive: true,
  property: padding-bottom,
  class: pb,
  values: $-spacers,
) !default;

$padding-left: (
  responsive: true,
  property: padding-left,
  class: pl,
  values: $-spacers,
) !default;

// Text
$text-transform: (
  property: text-transform,
  class: text,
  values: lowercase uppercase capitalize,
) !default;

$text-align: (
  responsive: true,
  property: text-align,
  class: text,
  values: left right center justify,
) !default;

$white-space: (
  property: white-space,
  class: text,
  values: (
    wrap: normal,
    nowrap: nowrap,
  ),
) !default;

$text-decoration: (
  property: text-decoration,
  values: none,
) !default;

$overflow-wrap: (
  property: overflow-wrap word-break,
  // word-break for IE & < Edge 18
    class: text,
  values: (
    break: break-word,
  ),
) !default;

$font-family: (
  property: font-family,
  class: font,
  values: (
    monospace: v.$font-family-monospace,
  ),
) !default;

$visibility: (
  property: visibility,
  class: null,
  values: (
    visible: visible,
    invisible: hidden,
  ),
) !default;

@mixin _generate-utility($utility) {
  @each $breakpoint in map-keys(v.$grid-breakpoints) {
    @include media-breakpoint-up($breakpoint) {
      $infix: breakpoint-infix($breakpoint);

      @if type-of($utility) ==
        'map' and
        (map-get($utility, responsive) or $infix == '')
      {
        @include generate-utility($utility, $infix);
      }
    }
  }
}

@include _generate-utility($align);
@include _generate-utility($float);
@include _generate-utility($overflow);
@include _generate-utility($display);
@include _generate-utility($position);
@include _generate-utility($width);
@include _generate-utility($max-width);
@include _generate-utility($viewport-width);
@include _generate-utility($min-viewport-width);
@include _generate-utility($height);
@include _generate-utility($max-height);
@include _generate-utility($viewport-height);
@include _generate-utility($min-viewport-height);
@include _generate-utility($flex);
@include _generate-utility($flex-direction);
@include _generate-utility($flex-grow);
@include _generate-utility($flex-shrink);
@include _generate-utility($flex-wrap);
@include _generate-utility($justify-content);
@include _generate-utility($align-items);
@include _generate-utility($align-content);
@include _generate-utility($align-self);
@include _generate-utility($order);
@include _generate-utility($margin);
@include _generate-utility($margin-x);
@include _generate-utility($margin-y);
@include _generate-utility($margin-top);
@include _generate-utility($margin-right);
@include _generate-utility($margin-bottom);
@include _generate-utility($margin-left);
@include _generate-utility($negative-margin);
@include _generate-utility($negative-margin-x);
@include _generate-utility($negative-margin-y);
@include _generate-utility($negative-margin-top);
@include _generate-utility($negative-margin-right);
@include _generate-utility($negative-margin-bottom);
@include _generate-utility($negative-margin-left);
@include _generate-utility($padding);
@include _generate-utility($padding-x);
@include _generate-utility($padding-y);
@include _generate-utility($padding-top);
@include _generate-utility($padding-right);
@include _generate-utility($padding-bottom);
@include _generate-utility($padding-left);
@include _generate-utility($text-transform);
@include _generate-utility($text-align);
@include _generate-utility($white-space);
@include _generate-utility($text-decoration);
@include _generate-utility($overflow-wrap);
@include _generate-utility($font-family);
@include _generate-utility($visibility);
